    *

// rubbr blockfile

// define custom blocks
!break
    init
        {
            return Block('span').add('br');
        }
    load
        {
            data('val', function (val) {
                for (var i = 1; i < val; i++)
                    block.add('br');
            });
        }
!text
    init
        {
            return Block('span');
        }
    load
        {
            data('val', function (val) {
                block.node().appendChild(document.createTextNode(val));
            });
            data('html', function (html) {
                block.html(html);
            });
        }
!image
    init
        {
            return Block('div');
        }
    load
        {
            var src = data('src');
            var height = data('height');
            var width = data('width');
            var alt = data('alt');
            if (src != null) {
                block.css('background-image', "url('" + src + "')")
                    .css('background-repeat', 'no-repeat')
                    .css('background-size', 'contain')
                ;
            }
            if (height !== null) block.css('height', height);
            else block.css('height', 'auto');
            if (width !== null) block.css('width', width);
            else block.css('width', 'auto');
            if (alt !== null) block.attribute('title', alt);
        }
// app UI content layer
app
    css
        opacity 0
        transition opacity 0.4s
        height 100%
        width 100%
        overflow hidden
    canvas canvas
        css
            background-color #151515
        @query window width != 0
            {
                block.data({
                    width: window.innerWidth + 'px',
                    height: window.innerHeight + 'px'
                });
            }
    block overlays
        css
            display none
        block overlay-health
            css
                position absolute
                bottom 25px
                width 75%
                height 35px
                left 0
                max-width 400px
                background-color rgba(2, 2, 2, 0.6)
                border-radius 2px
            @query window width != 0
                {
                    block.css('left', (window.innerWidth / 2 - block.$().width() / 2) + 'px');
                }
            div health
                css
                    width 97%
                    height 65%
                    border-radius 1px
                    background-color rgba(120, 40, 40, 0.8)
                    margin 0 auto
                    transition width 0.1s ease
            #health
                {
                    block.child('health').css('width', (health * 0.97) + '%');
                }
        block overlay-money
            css
                position absolute
                bottom 25px
                width auto
                height 35px
                left 35px
                min-width 80px
                background-color rgba(2, 2, 2, 0.6)
                border-radius 2px
                padding 0 4px 0 4px
                transition background-color 0.15s ease
            @query window width != 0
                {
                    block.css('left', (window.innerWidth / 2 - block.sibling('overlay-health').$().width() / 2 - block.$().width() - 20) + 'px');
                }
            text money
                val $0
                css
                    color rgba(255, 255, 255, 0.8)
                    font-size 16px
                    font-weight bold
                    font-family Trebuchet, Verdana, Helvetica, Arial, sans-serif
            $value 0
            #money
                {
                    block.child('money').html('').data('$' + money);
                    if (block.key('value') > money) block.on('flash', { color: 'red' });
                    else if (block.key('value') < money) block.on('flash', { color: 'green' });
                    block.key('value', money);
                }
            $flash off
            :flash
                {
                    if (block.key('flash') == 'off' || data.color == 'red') {
                        block.key('flash', 'on');
                        var bg = block.css('background-color');
                        if (data.color == 'green') block.css('background-color', 'rgba(42, 92, 42, 0.7)');
                        else if (data.color == 'red') block.css('background-color', 'rgba(92, 42, 42, 0.7)');
                        else if (data.color == 'white') block.css('background-color', 'rgba(230, 230, 230, 0.6)');
                        setTimeout(function () {
                            block.css('background-color', bg);
                            block.key('flash', 'off');
                        }, 200);
                    }
                }
        block overlay-kills
            css
                position absolute
                bottom 25px
                width auto
                height 35px
                right 35px
                min-width 80px
                background-color rgba(2, 2, 2, 0.6)
                border-radius 2px
                padding 0 4px 0 4px
                transition background-color 0.3s ease
            @query window width != 0
                {
                    block.css('right', (window.innerWidth / 2 - block.sibling('overlay-health').$().width() / 2 - block.$().width() - 20) + 'px');
                }
            text kills
                val 0 kills
                css
                    color rgba(255, 255, 255, 0.8)
                    font-size 16px
                    font-weight bold
                    font-family Trebuchet, Verdana, Helvetica, Arial, sans-serif
            $value 0
            #kills
                {
                    block.child('kills').html('').data(kills + ' ' + (kills == 1 ? 'kill' : 'kills'));
                    if (block.key('value') > kills) block.on('flash', { color: 'red' });
                    else if (block.key('value') < kills) block.on('flash', { color: 'green' });
                    block.key('value', kills);
                }
            $flash off
            :flash
                {
                    if (block.key('flash') == 'off' || data.color == 'red') {
                        block.key('flash', 'on');
                        var bg = block.css('background-color');
                        if (data.color == 'green') block.css('background-color', 'rgba(42, 92, 42, 0.7)');
                        else if (data.color == 'red') block.css('background-color', 'rgba(92, 42, 42, 0.7)');
                        else if (data.color == 'white') block.css('background-color', 'rgba(230, 230, 230, 0.6)');
                        setTimeout(function () {
                            block.css('background-color', bg);
                            block.key('flash', 'off');
                        }, 500);
                    }
                }
        div overlay-rankings
            class overlay
            css
                position absolute
                top 25px
                min-height 100px
                min-width 100px
                width auto
                height auto
                right 30px
                background-color rgba(2, 2, 2, 0.6)
                border-radius 2px
                padding 6px 20px 10px
                transition background-color 0.3s ease
            text title
                val leaderboard
                css
                    color #ddd
                    font-size 20px
                    font-weight bold
                    // text-decoration underline
            div spacer
                css
                    height 2px
            text rankings
                html &nbsp;
                css
                    color #ddd
                    font-size 16px
            :display
                {
                    var rankings = data.rankings;
                    var html = '';
                    var i = 1;
                    for (var user in rankings) {
                        if (i == 6) break;
                        html += i + '.&nbsp;&nbsp;' + rankings[user]['name'] + '<br/>';
                        i++;
                    }
                    block.child('rankings').html(html);
                }
    block intro
        css
            top 0
            left 0
            right 0
            bottom 0
            position absolute
            display table
        div div
            css
                width 400px
                min-height 415px
                height auto
                background-color #1c1c1c
                border-radius 12px
                margin 0 auto
                padding-top 40px
            text title
                val rubbr
                css
                    color #ddd
                    font-size 70px
            div links
                css
                    margin 10px auto 25px
                div github
                    css
                        display inline-block
                        margin 10px 15px
                        cursor pointer
                        opacity 0.6
                        transition opacity 0.2s ease
                    a link
                        href https://github.com/anuvgupta/rubbr
                        target _blank
                        image img
                            height 50px
                            width 50px
                            src img/github-white.png
                    :mouseover
                        css
                            opacity 0.8
                    :mouseout
                        css
                            opacity 0.6
                div help
                    css
                        display inline-block
                        margin 10px 15px
                        cursor pointer
                        opacity 0.6
                        transition opacity 0.2s ease
                    image img
                        height 50px
                        width 50px
                        src img/help-white.png
                    :mouseover
                        css
                            opacity 0.8
                    :mouseout
                        css
                            opacity 0.6
            input username
                placeholder username
                css
                    border-radius 5px
                    outline none
                    border none
                    padding 14px 20px
                    font-size 24px
                    text-align center
                    background-color #333
                    color #eee
                :focus
                    css
                        text-align left
                :blur
                    css
                        text-align center
                :keyup
                    {
                        if (event.keyCode == 13) {
                            block.sibling('join').on('click');
                        }
                    }
            block join
                text text
                    val join
                    css
                        color #eee
                        font-size 23px
                css
                    text-align center
                    height 58px
                    width 252px
                    margin 15px auto 5px
                    border-radius 5px
                    opacity 0.82
                    background-color rgb(70, 143, 72)
                    transition background-color 0.2s ease, opacity 0.2s ease
                    cursor pointer
                :mouseover
                    css
                        background-color rgb(70, 143, 72)
                        opacity 0.95
                :mouseout
                    css
                        background-color rgb(70, 143, 72)
                        opacity 0.82
                :click
                    {
                        var val = block.sibling('username').node().value;
                        if (!Block.is.unset(val) && Block.is.str(val) && val.trim() != '') {
                            app.pocket.send('login', val);
                        }
                    }
            div message
                text text
                    val an error occurred
                    css
                        font-size 20px
                        color rgb(132, 48, 48)
                css
                    opacity 0
                    transition opacity 0.2s ease
                :revalue
                    {
                        block.child('text').html('').data(data.value);
                        block.on('show');
                        setTimeout(function () {
                            block.on('hide');
                        }, 8000);
                    }
                :show
                    css
                        opacity 0.9
                :hide
                    css
                        opacity 0
